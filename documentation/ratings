		// how many ratings are in total?
		$totalNumberOfRatings = 0;

		// what's the sum of all these ratings? (needed for averages per site)
		$sumOfAllRatings = 0;

		$usersRatingData = array();



			$userNumberOfRatings = 0;
			foreach ($person['cities'] as $city=>$rating) {
				$userNumberOfRatings++;
				$totalNumberOfRatings++;
				$sumOfAllRatings += $rating;
			}

			$userStatistics = array();
			$userStatistics['slug'] = $person['slug'];
			$userStatistics['vote_count'] = $userNumberOfRatings;
			$usersRatingData[] = $userStatistics;


		// in average, how many ratings each user has?
		$averageRatingsPerSiteUser = $totalNumberOfRatings / count($this->people);

		// in average, what's the rating of a city site-wide?
		$averageRating = $sumOfAllRatings / $totalNumberOfRatings;

		for ($i=0; $i<$usersRatingData; $i++) {
			$usersRatingData[$i]["influence"] = $usersRatingData[$i]["vote_count"] / $averageRatingsPerSiteUser;
		}


	public function computeCitiesRating() {

		$this->cities = array();

		$citiesTable = new Cities_Table();
		$citiesRatingsTable = new Cities_Ratings_Table();

		foreach ($this->people as $person) {



			foreach ($person['cities'] as $city => $rating) {

				if (!array_key_exists($city, $this->cities)) {
					$statement = array(
					   'city_name'		=>$city
					);
					$cityDbID = $citiesTable->insert($statement);

					$this->cities[$city] = array();
					$this->cities[$city]['ratings'] = array();
					$this->cities[$city]['id'] = $cityDbID;
				}

				if (is_numeric($rating)) {

					$statement = array(
					   'account_id'		=>$dbID
					   'city_id'		=>$cityDbID,
					   'rating'			=>$rating
					);
					$citiesRatingsTable->insert($statement);

					// $newRating = array();
					// $newRating['user'] = $dbID;
					// $newRating['rating'] = $rating;
					// $this->cities[$city]['ratings'][] = $newRating;

				}

			}

			$userVoteRatio = $userNumberOfRatings / $averageNumberOfRatings;

		}


	}